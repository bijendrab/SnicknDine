<?xml version="1.0" encoding="UTF-8" ?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd">

	<mvc:annotation-driven></mvc:annotation-driven>

	<context:component-scan base-package="com.*"></context:component-scan>

	<!-- it will scan all the class under the package com.tutorial create instances 
		for all the -->
	<!-- class which has an annotations like @Component, @Controller, @Service, 
		@Repository -->

	<!-- JSON Support -->
	<bean  class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<property name="order" value="0" />
	</bean>
	<bean name="jsonTemplate" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/>

	<!-- Using this it get the actual view name by converting logical view name -->
	<!-- for eg: logical view name is welcome -->
	<!-- it will convert it to WEB-INF/Views/welcome.jsp -->

	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/page/" />
		<property name="suffix" value=".jsp" />
		<property name="order" value="1" />
	</bean>

	<!-- mvc:resources is to find the resource file like bootstrap,css,JQuery 
		and Images in resource folder -->

	<mvc:resources mapping="/resource/**" location="/WEB-INF/resource/" />
	<mvc:cors>
		<mvc:mapping path="/**"
					 allowed-origins="*"
					 allowed-headers="Content-Type, content-type, x-requested-with, Access-Control-Allow-Origin, Access-Control-Allow-Headers, x-auth-token, x-app-id, Origin,Accept, X-Requested-With, Access-Control-Request-Method, Access-Control-Request-Headers, requestId, Correlation-Id"
					 allowed-methods="GET, PUT, POST, DELETE,OPTIONS"
					 exposed-headers="x-auth-token, Access-Control-Allow-Origin"/>
	</mvc:cors>
</beans>
